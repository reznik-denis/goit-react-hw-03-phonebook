{"version":3,"sources":["Components/ContactForm.jsx","Components/ButtonDelete.jsx","Components/ContactList.jsx","Components/Filter.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","id","this","className","type","onChange","disabled","Component","Button","onDeleteContact","onClick","ContactList","contacts","map","ButtonDelete","Filter","App","filter","formSubmitHendler","contact","shortid","generate","find","cont","alert","deleteContact","idContact","chengeFilter","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5771ada.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '', id: '' })\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (<form className=\"formBlock\" onSubmit={this.handleSubmit}>\r\n        <label className=\"labelBlock\">\r\n              Name <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n                name=\"name\"\r\n                className=\"inputStyles\" />\r\n        </label>\r\n        <label className=\"labelBlock\">\r\n              Number <input\r\n                type=\"tel\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                name=\"number\"\r\n                className=\"inputStyles\" />\r\n        </label>\r\n        <button type=\"submit\" className=\"button\" disabled={!name || !number}>Add contact</button>\r\n      </form> )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ onDeleteContact, id }) {\r\n    return <button\r\n        type=\"button\"\r\n        className=\"buttonDelete\"\r\n        onClick={() => onDeleteContact(id)}>Delete\r\n    </button>\r\n}\r\n\r\nButton.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired, \r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport ButtonDelete from './ButtonDelete';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactList({contacts, onDeleteContact}) {\r\n    return (<ul className=\"list\">\r\n            {contacts.map(({id, name, number}) => (\r\n              <li key={id} className=\"listItem\">{name}: {number}\r\n                    <ButtonDelete onDeleteContact={onDeleteContact} id={id}/>\r\n              </li>\r\n              ))}\r\n          </ul>)\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }))\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({value, onChange}) {\r\n    return (<label className=\"labelBlock\">\r\n        Find contacts by name <input type=\"text\" value={value} onChange={onChange} className=\"inputStyles\"/>\r\n        </label>)\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import './App.css';\nimport { Component } from 'react';\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport shortid from 'shortid';\n\n\nconst contacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nclass App extends Component {\n  state = {\n  contacts: contacts,\n  filter: '',\n  }\n\n  formSubmitHendler = ({name, number}) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (this.state.contacts.find(cont => cont.name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return\n    }\n    this.setState(({contacts}) => ({\n      contacts: [contact, ...contacts]\n    }));\n  };\n\n  deleteContact = idContact => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== idContact)\n    }));\n  };\n\n  chengeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n    \n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.formSubmitHendler}/>\n      <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.chengeFilter}/>\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n    </div>\n  );\n  }}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}